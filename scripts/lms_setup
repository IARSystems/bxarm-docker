#!/bin/bash

#
# Copyright (c) 2020 IAR Systems AB
#
# lms_setup
#
# Configures a host to use the LMS2 network license server 
#
# See LICENSE.md for detailed license information
#

### Configure the IAR_LMS_SETTINGS_DIR as it default value
IAR_LMS_SETTINGS_DIR=$HOME/.lms

### List of potentially valid architectures
VALID_ARCH_TAGS=(ARMBX)
VALID_TAGS_HELP=$(printf '%s, ' "${VALID_ARCH_TAGS[@]}")

### Supported versions and associated feature
declare -A FEAT_VERS
FEAT_VERS[850,ARMBX]=1.18

### Do not need to be touched from here down below...
function show_help() {
echo "Usage: $0 -s <server> [optional parameters]"
echo " Mandatory parameters:"
echo "  -s <server>       LMS server IP address"
echo " Optional parameters:"
echo "  -a <tag>          choose architecture     (default: ARMBX)"
echo "  -v <a.bb>         set product version     (default: 8.50)"
echo "  -c <path>         configuration directory (default: /.lms)"
echo "  -f <x.yy>         license feature version (default: 1.18)"
echo "  -l <n>            license generation      (default: 1)"

exit 0
}

### Process command line arguments
while getopts ":a:v:c:f:l:s:h" arg; do 
    case $arg in
		a) IAR_ICC_ARCH=$OPTARG;;
		v) IAR_PROD_VERSION=$OPTARG;;
		c) custom_cfg=true; IAR_LMS_SETTINGS_DIR=$OPTARG;;
		f) IAR_ICC_FEAT=$OPTARG;;
		l) IAR_LMS_LIC_GEN=$OPTARG;;
		s) IAR_LMS_SERVER_ADDRESS=$OPTARG;;
	    h) show_help;;
		*) echo "Unimplemented option: -$OPTARG" >&2; exit 1;;
	esac
done

### Check for netcat
NC_EXEC=$(command -v nc)
if [[ -z $NC_EXEC ]]; then
	echo "netcat utility not found."
	exit
#else
	#echo "netcat utility found in ${NC_EXEC}"
fi

### Check if there is a visible server with the lms-sentinel port open
if  [[ -z $IAR_LMS_SERVER_ADDRESS ]]; then
	echo "The server must be specified. Use: \$ $0 -s <INSERT YOUR LMS SERVER ADDRESS>" >&2
	echo "Invoke $0 -h for more information." >&2
	exit 1
else
	if nc -w 2 -z $IAR_LMS_SERVER_ADDRESS 5093 2 > /dev/null; then
		echo LMS Server: $IAR_LMS_SERVER_ADDRESS is up.
	else
		echo "TIMEOUT: invalid server IP address specified."
		exit 1
	fi
fi

### Check for choosen architecture validity
if  [[ -z $IAR_ICC_ARCH ]]; then
	IAR_ICC_ARCH=ARMBX
else
	if [[ ${VALID_ARCH_TAGS[@]} =~ ${IAR_ICC_ARCH} ]]; then
		echo "$IAR_ICC_ARCH architecture selected."
	else
		echo "$IAR_ICC_ARCH architecture is not valid."
		exit 1
	fi
fi

if [[ ! -z $IAR_PROD_VERSION ]]; then
	SELECTED=${FEAT_VERS["${IAR_PROD_VERSION//./}",${IAR_ICC_ARCH}]}
	if [[ ! -z $SELECTED ]]; then
		IAR_ICC_FEAT=${FEAT_VERS["${IAR_PROD_VERSION//./}",${IAR_ICC_ARCH}]}
	else	
		echo "The version $IAR_PROD_VERSION is not recognized for the EW.$IAR_ICC_ARCH"
		echo "Use $0 -f <version> manually if necessary."
		exit
	fi
else
	### Assume default feature version if none is specified.
	if  [[ -z $IAR_ICC_FEAT ]]; then
		IAR_ICC_FEAT=1.18
	fi
fi

### Assume default feature generation if none is specified.
if  [[ -z $IAR_LMS_LIC_GEN ]]; then
	IAR_LMS_LIC_GEN=1
fi

IAR_LMS_SELECTED_PACKAGE_DIR=LicenseManagement/LicensePackages/"${IAR_ICC_ARCH}"/EW/"${IAR_LMS_LIC_GEN}"
IAR_LMS_SELECTED_PACKAGE="${IAR_LMS_SETTINGS_DIR}"/"${IAR_LMS_SELECTED_PACKAGE_DIR}"/Selected.package
echo Selected Package: ${IAR_LMS_SELECTED_PACKAGE}

echo "Checking for LMS settings directory: ${IAR_LMS_SETTINGS_DIR} ..."
if [[ ! -d "${IAR_LMS_SETTINGS_DIR}/${IAR_LMS_SELECTED_PACKAGE_DIR}" ]]; then
	mkdir -p "${IAR_LMS_SETTINGS_DIR}"/"${IAR_LMS_SELECTED_PACKAGE_DIR}"
fi

# Cache License information to the /tmp directory
#ln -sf /tmp "${IAR_LMS_SETTINGS_DIR}"/LicenseManagement/LicenseCache
mkdir -p "${IAR_LMS_SETTINGS_DIR}"/LicenseManagement/LicenseCache

### Selected.package template
echo "################################################################################" >  "${IAR_LMS_SELECTED_PACKAGE}"
echo "# Package :                                                                     " >> "${IAR_LMS_SELECTED_PACKAGE}"
echo "# Type : Network                                                                " >> "${IAR_LMS_SELECTED_PACKAGE}"
echo "# Server Name : ${IAR_LMS_SERVER_ADDRESS}                                       " >> "${IAR_LMS_SELECTED_PACKAGE}"
echo "# License Number :                                                              " >> "${IAR_LMS_SELECTED_PACKAGE}"
echo "# Product Tag : ${IAR_ICC_ARCH}.EW                                              " >> "${IAR_LMS_SELECTED_PACKAGE}"
echo "# Package Tag : STD                                                             " >> "${IAR_LMS_SELECTED_PACKAGE}"
echo "# License Generation : ${IAR_LMS_LIC_GEN}                                       " >> "${IAR_LMS_SELECTED_PACKAGE}"
echo "################################################################################" >> "${IAR_LMS_SELECTED_PACKAGE}"
echo "# Feature : ${IAR_ICC_ARCH}.EW.COMPILER_STD                                     " >> "${IAR_LMS_SELECTED_PACKAGE}"
echo "# Version : ${IAR_ICC_FEAT}                                                     " >> "${IAR_LMS_SELECTED_PACKAGE}"
echo " "                                                                                >> "${IAR_LMS_SELECTED_PACKAGE}"
echo "# Feature : ${IAR_ICC_ARCH}.EW.GEN18_STD                                        " >> "${IAR_LMS_SELECTED_PACKAGE}"
echo "# Version : 1.00                                                                " >> "${IAR_LMS_SELECTED_PACKAGE}"
echo " "                                                                                >> "${IAR_LMS_SELECTED_PACKAGE}"
echo "# Feature : ${IAR_ICC_ARCH}.EW.LINKER_STD                                       " >> "${IAR_LMS_SELECTED_PACKAGE}"
echo "# Version : ${IAR_ICC_FEAT}                                                     " >> "${IAR_LMS_SELECTED_PACKAGE}"
echo " "                                                                                >> "${IAR_LMS_SELECTED_PACKAGE}"
echo "# Feature : ${IAR_ICC_ARCH}.EW.MISRAC_STD                                       " >> "${IAR_LMS_SELECTED_PACKAGE}"
echo "# Version : ${IAR_ICC_FEAT}                                                     " >> "${IAR_LMS_SELECTED_PACKAGE}"
echo " "                                                                                >> "${IAR_LMS_SELECTED_PACKAGE}"

#echo "Updating recommended permissions for folders..."
find $IAR_LMS_SETTINGS_DIR -type d -exec chmod 755 {} \;

#echo "Updating recommended permissions for files..."
find $IAR_LMS_SETTINGS_DIR -type f -exec chmod 644 {} \;
 
